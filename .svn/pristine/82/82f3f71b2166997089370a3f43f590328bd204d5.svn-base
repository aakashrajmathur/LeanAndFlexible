using Microsoft.Win32;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace FlowAssessmentTool
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        Study study;

        public MainWindow()
        {
            InitializeComponent();
        }

        private void ImportFromCSVFile_Click(object sender, RoutedEventArgs e)
        {
            OpenFileDialog openFileDialog1 = new OpenFileDialog();
            openFileDialog1.Filter = "CSV files (*.csv)|*.csv";
            openFileDialog1.FilterIndex = 1;
            openFileDialog1.Multiselect = false;

            // Call the ShowDialog method to show the dialog box.
            bool? userClickedOK = openFileDialog1.ShowDialog();

            // Process input if the user clicked OK.
            if (userClickedOK == true)
            {
                this.study = new DataImport().ImportFromCSVFile(openFileDialog1.FileName);
            }
        }

        private void button_Click(object sender, RoutedEventArgs e)
        {
            if (this.study == null)
            {
                return;
            }

            listBox.Items.Clear();
            foreach (Selection s in this.study.selectionsInStudy)
            {
                listBox.Items.Add(s.name);
            }

            listBox1.Items.Clear();
            foreach (Part p in this.study.partsInStudy)
            {
                listBox1.Items.Add(p.ToString());
                listBox1.Items.Add(p.ToXML());
            }

            listBox2.Items.Clear();
            foreach (Machine m in this.study.machinesInStudy)
            {
                listBox2.Items.Add(m.name);
            }

            new DataExport().WriteStudyToJSON(this.study);
            new DataImport().ReadXMLFile("");
        }

        private void listBox_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            ListBoxItem lbi = e.Source as ListBoxItem;

            if (lbi != null)
            {
                string temp = lbi.Content.ToString() + " is selected.";
                MessageBox.Show("From selection changed - debug : " + temp);
            }

        }

        private void button1_Click(object sender, RoutedEventArgs e)
        {
            //PriorityDebugWindow p = new PriorityDebugWindow();
            //p.study = this.study;
            //p.Show();
        }

        private void PriorityButton_Click(object sender, RoutedEventArgs e)
        {
            PriorityDebugWindow p = new PriorityDebugWindow();
            p.study = this.study;
            p.Show();
        }
    }
}
