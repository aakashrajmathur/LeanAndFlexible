using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace NewHorizons
{
    /// <summary>
    /// Interaction logic for PriorityUserControl.xaml
    /// </summary>
    public partial class PriorityUserControl : UserControl
    {
        private Study study;
        public PriorityUserControl()
        {
            InitializeComponent();
        }

        public void updateUI(Study study, string startSelectionName = "")
        {
            this.study = study;
            prioritySliderLabel.Content = PrioritySlider.Value;
            MessageBox.Show(startSelectionName);
            //MessageBox.Show("From Priority user control's update UI.");
        }

        private void UserControl_IsVisibleChanged(object sender, DependencyPropertyChangedEventArgs e)
        {
            if (((System.Windows.UIElement)sender).IsVisible == false)
            {
                MessageBox.Show("Priority just lost visiblity, ask user to save work...");
            }
        }

        private void slider_ValueChanged(object sender, RoutedPropertyChangedEventArgs<double> e)
        {
            prioritySliderLabel.Content = PrioritySlider.Value; 
            Selection s = new SelectionCreation().CreateSelection(study, PrioritySlider.Value, "Testing");

            statusLabel.Content = "Count of parts in " + s.name + Environment.NewLine +
                "Always Included = " + s.partsAlwaysIncluded.Count.ToString() + Environment.NewLine +
                "Included = " + s.partsIncluded.Count.ToString() + Environment.NewLine +
                "Not Included = " + s.partsNotIncluded.Count.ToString() + Environment.NewLine +
                "Never Included = " + s.partsNeverIncluded.Count.ToString() + Environment.NewLine;
            

            listBox.Items.Clear(); 
            foreach(Part p in s.partsAlwaysIncluded)
            {
                listBox.Items.Add(p.name);
            }

            listBox1.Items.Clear();
            foreach (Part p in s.partsIncluded)
            {
                listBox1.Items.Add(p.name);
            }

            listBox2.Items.Clear();
            foreach (Part p in s.partsNotIncluded)
            {
                listBox2.Items.Add(p.name);
            }

            listBox3.Items.Clear();
            foreach (Part p in s.partsNeverIncluded)
            {
                listBox3.Items.Add(p.name);
            }
        }
    }
}
